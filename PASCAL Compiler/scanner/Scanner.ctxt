#BlueJ class context
comment0.target=Scanner
comment0.text=\n\ The\ Scanner\ lab\ is\ the\ first\ part\ of\ making\ a\ compiler.\ It\ has\ two\ \n\ constructors\ and\ the\ methods\ getNextChar(),\ eat(),\ hasNext(),\ isDigit(),\ \n\ isLetter(),\ isWhiteSpace(),\ scanNumber(),\ scanIdentifier(),\ scanOperator(),\n\ and\ nextToken(),\ and\ more.The\ scanner\ is\ used\ to\ remove\ whitespace\ \n\ from\ the\ code\ and\ make\ tokens.\n\ \n\ @author\ Sanaa\ Bhorkar\n\ @version\ 08/30/2023\n
comment1.params=inStream
comment1.target=Scanner(java.io.InputStream)
comment1.text=\n\ Scanner\ constructor\ for\ construction\ of\ a\ scanner\ that\ \n\ uses\ an\ input\ stream\ for\ input.\ \ \n\ \n\ @param\ inStream\ the\ input\ stream\ to\ use\n
comment10.params=
comment10.target=java.lang.String\ scanNumber()
comment10.text=\n\ The\ scanNumber()\ method\ scans\ the\ input\ and\ returns\ the\ entire\ lexeme\ \n\ after\ terminated.\n\ \n\ @return\ the\ number\ in\ the\ form\ of\ a\ string\n\ @throws\ ScanErrorException\ if\ there\ are\ non-digit\ characters\ in\ the\ number\n\ @precondition\ the\ current\ character\ is\ a\ digit\n\ @postcondition\ a\ new\ number\ token\ has\ been\ formed\n
comment11.params=
comment11.target=java.lang.String\ scanIdentifier()
comment11.text=\n\ The\ scanIdentifier()\ method\ scans\ the\ input\ and\ returns\ the\ entire\ \n\ lexeme\ after\ terminated.\n\ \n\ @return\ the\ identifier\ in\ the\ form\ of\ a\ string\n
comment12.params=
comment12.target=java.lang.String\ scanOperand()
comment12.text=\n\ The\ scanOperand\ method()\ scans\ the\ input\ and\ returns\ the\ operator.\ \n\ \n\ @return\ the\ operand\ in\ the\ form\ of\ a\ string\n
comment13.params=
comment13.target=java.lang.String\ scanSeparator()
comment13.text=\n\ The\ scanSeparator()\ method\ scans\ the\ input\ and\ returns\ the\ separator.\n\ \n\ @return\ the\ separator\ in\ the\ form\ of\ a\ string\n
comment14.params=
comment14.target=boolean\ hasNext()
comment14.text=\n\ The\ hasNext()\ method\ checks\ if\ the\ file\ has\ more\ characters\ to\ read.\n\ \n\ @return\ true\ if\ yes,\ otherwise\ false\n
comment15.params=
comment15.target=java.lang.String\ nextToken()
comment15.text=\n\ The\ nextToken()\ method\ returns\ the\ next\ token\ or\ the\ value\ "EOF"\ if\ \n\ it\ is\ the\ end\ of\ the\ file.\n\ \n\ @return\ the\ next\ token\n
comment2.params=inString
comment2.target=Scanner(java.lang.String)
comment2.text=\n\ Scanner\ constructor\ for\ constructing\ a\ scanner\ that\ \n\ scans\ a\ given\ input\ string.\ \ It\ sets\ the\ end-of-file\ flag\ an\ then\ reads\n\ the\ first\ character\ of\ the\ input\ string\ into\ the\ instance\ field\ currentChar.\n\ \n\ @param\ inString\ the\ string\ to\ scan\n
comment3.params=
comment3.target=void\ getNextChar()
comment3.text=\n\ The\ getNextChar()\ method\ reads\ the\ next\ character\ in\ a\ line.\ If\ it's\n\ the\ last\ character,\ it\ changes\ the\ boolean\ eof\ to\ true.\n
comment4.params=expected
comment4.target=void\ eat(char)
comment4.text=\n\ The\ eat()\ method\ checks\ if\ the\ current\ char\ is\ equal\ to\ the\ expected\n\ char\ and\ eats\ it\ if\ true.\ Otherwise,\ it\ throws\ a\ ScanErrorException.\n\ \n\ @param\ expected\ the\ character\ the\ scanner\ is\ expecting\n
comment5.params=c
comment5.target=boolean\ isDigit(char)
comment5.text=\n\ The\ isDigit()\ method\ checks\ if\ the\ character\ is\ a\ digit.\n\ \n\ @param\ c\ is\ the\ character\ being\ checked\n\ @return\ true\ if\ c\ is\ a\ digit,\ otherwise\ false\n
comment6.params=c
comment6.target=boolean\ isLetter(char)
comment6.text=\n\ The\ isLetter()\ method\ checks\ if\ the\ character\ is\ a\ letter.\n\ \n\ @param\ c\ is\ the\ character\ being\ checked\n\ @return\ true\ if\ c\ is\ a\ letter,\ otherwise\ false\n
comment7.params=c
comment7.target=boolean\ isWhiteSpace(char)
comment7.text=\n\ The\ isWhiteSpace()\ method\ checks\ if\ the\ character\ is\ a\ white\ space.\n\ \n\ @param\ c\ is\ the\ character\ being\ checked\n\ @return\ true\ if\ c\ is\ a\ white\ space,\ otherwise\ false\n
comment8.params=c
comment8.target=boolean\ isOperand(char)
comment8.text=\n\ The\ isOperator()\ method\ checks\ if\ the\ character\ is\ an\ operator.\n\ \n\ @param\ c\ is\ the\ character\ being\ checked\n\ @return\ true\ if\ c\ is\ an\ operator,\ otherwise\ false\n
comment9.params=c
comment9.target=boolean\ isSeparator(char)
comment9.text=\n\ The\ isSeparator()\ method\ checks\ if\ the\ character\ is\ a\ terminator\ or\n\ a\ separator.\n\ \n\ @param\ c\ is\ the\ character\ being\ checked\n\ @return\ true\ if\ c\ is\ an\ terminator,\ otherwise\ false\n
numComments=16
