#BlueJ class context
comment0.target=ProcedureDeclaration
comment0.text=\n\ The\ ProcedureDeclaration\ class\ represents\ a\ procedure\ once\ it\ has\ been\n\ declared\ in\ the\ PASCAL\ program.\ Therefore,\ it\ has\ an\ identifier,\ the\ body\ \n\ of\ the\ procedure\ (the\ statement),\ and\ the\ list\ of\ parameters.\ \n\ \n\ @author\ Sanaa\ Bhorkar\n\ @version\ 10/31/2023\n
comment1.params=id\ stmt\ params
comment1.target=ProcedureDeclaration(java.lang.String,\ Statement,\ java.util.List)
comment1.text=\n\ The\ ProcedureDeclaration\ constructor\ creates\ a\ new\ ProcedureDeclaration\n\ and\ instantiates\ the\ id,\ statement,\ and\ parameter\ objects.\n\ \n\ @param\ id\ \ \ \ \ the\ name\ of\ the\ procedure\n\ @param\ stmt\ \ \ the\ statement\ in\ the\ body\ of\ the\ procedure\n\ @param\ params\ the\ list\ of\ parameters\ for\ the\ procedure\n\ @postcondition\ a\ new\ ProcedureDeclaration\ object\ is\ created\n
comment2.params=v
comment2.target=void\ setLocalVars(java.util.List)
comment2.text=\n\ The\ setLocalVars()\ method\ sets\ the\ local\ variables\ for\ the\ procudure\ to\n\ a\ given\ list.\ \n\ \n\ @param\ v\ the\ list\ that\ is\ the\ list\ of\ local\ variables\n
comment3.params=
comment3.target=java.util.List\ getParams()
comment3.text=\n\ The\ getParams()\ method\ returns\ the\ params\ of\ the\ ProcedureDeclaration.\n\ \n\ @return\ the\ list\ that\ is\ the\ params\ of\ the\ ProcedureDeclaration\n
comment4.params=
comment4.target=Statement\ getBody()
comment4.text=\n\ The\ getBody()\ method\ returns\ the\ body\ of\ the\ ProcedureDeclaration.\n\ \n\ @return\ the\ statement\ that\ is\ the\ body\ of\ the\ ProcedureDeclaration\n
comment5.params=
comment5.target=java.lang.String\ getName()
comment5.text=\n\ The\ getName()\ method\ returns\ the\ name\ of\ the\ procedure.\n\ \n\ @return\ the\ name\ of\ the\ procedure\n
comment6.params=
comment6.target=java.util.List\ getLocalVars()
comment6.text=\n\ The\ getLocalVars()\ method\ returns\ a\ list\ of\ the\ local\ variables\ of\n\ the\ procedure.\n\ \n\ @return\ a\ list\ of\ local\ variables\n
comment7.params=env
comment7.target=void\ exec(environment.Environment)
comment7.text=\n\ The\ exec()\ method\ executes\ the\ ProcedureDeclaration\ by\ adding\ the\n\ procedure\ to\ the\ environment.\ \n\ \n\ @param\ env\ the\ given\ environment\n\ @postcondition\ the\ procudure\ is\ added\ to\ the\ map\ of\ procedures\ in\ the\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ environment\n
comment8.params=e
comment8.target=void\ compile(emitter.Emitter)
comment8.text=\n\ The\ compile()\ method\ creates\ the\ MIPS\ equivalent\ of\ the\ PASCAL\ code.\ \n\ \n\ @param\ e\ the\ emitter\ that\ emits\ each\ line\ of\ MIPS\ code\ into\ the\ output\ file\n
numComments=9
