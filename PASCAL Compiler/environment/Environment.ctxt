#BlueJ class context
comment0.target=Environment
comment0.text=\n\ The\ Environment\ class\ has\ methods\ to\ set\ and\ get\ values\ under\ variables.\n\ It\ is\ used\ in\ the\ Assignment\ and\ Variable\ classes\ in\ AST\ for\ getting\n\ and\ setting\ variables.\ \n\ \n\ @author\ Sanaa\ Bhorkar\n\ @version\ 10/13/2023\n
comment1.params=par
comment1.target=Environment(Environment)
comment1.text=\n\ Creates\ a\ new\ Environment\ object\ by\ instantiating\ the\ variable\ \n\ HashMap.\n\ \n\ @param\ par\ the\ parent\ environment\ for\ the\ given\ environment\ (if\ not\n\ \ \ \ \ \ \ \ applicable,\ then\ null\ is\ used)\n\ @postcondition\ a\ new\ Environment\ object\ is\ created\ that\ is\ connected\ to\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ its\ parent\n
comment2.params=
comment2.target=java.util.Map\ getVarMap()
comment2.text=\n\ The\ getVarMap()\ method\ returns\ the\ variable\ map\ for\ the\ environment.\n\ \n\ @return\ the\ variable\ map\ with\ keys\ as\ strings\ and\ values\ as\ integers\n
comment3.params=
comment3.target=java.util.Map\ getProMap()
comment3.text=\n\ The\ getProMap()\ method\ returns\ the\ procedure\ map\ for\ the\ environment.\n\ \n\ @return\ the\ procedure\ map\ with\ keys\ as\ strings\ and\ values\ as\ \n\ \ \ \ \ \ \ \ \ procedure\ declarations\n
comment4.params=variable\ value
comment4.target=void\ setVariable(java.lang.String,\ int)
comment4.text=\n\ The\ setVariable()\ method\ associates\ a\ value\ with\ the\ variable.\n\ \n\ @param\ variable\ the\ variable\ to\ associate\ to\n\ @param\ value\ \ \ \ the\ value\ to\ associate\ with\ the\ variable\n\ @postcondition\ \ the\ value\ to\ a\ variable\ is\ added/updated\ to\ the\ HashMap\n
comment5.params=variable\ value
comment5.target=void\ declareVariable(java.lang.String,\ int)
comment5.text=\n\ The\ declareVariable()\ method\ declares\ a\ variable\ in\ the\ current\n\ environment's\ variable\ map.\ \n\ \n\ @param\ variable\ the\ name\ of\ the\ variable\n\ @param\ value\ \ \ \ the\ integer\ value\ of\ the\ variable\n\ @postcondition\ \ the\ variable\ is\ added\ to\ the\ variable\ map\ of\ the\ environment\n
comment6.params=variable
comment6.target=int\ getVariable(java.lang.String)
comment6.text=\n\ The\ getVariable()\ method\ returns\ the\ value\ assosciated\ with\ the\ \n\ variable.\n\ \n\ @param\ variable\ the\ given\ variable\ to\ find\ the\ value\ for\n\ @return\ the\ value\ of\ the\ variable\n
comment7.params=name\ dec
comment7.target=void\ setProcedure(java.lang.String,\ ast.ProcedureDeclaration)
comment7.text=\n\ The\ setProcedure()\ method\ adds\ a\ new\ procedure\ and\ its\ declaration\n\ object\ to\ the\ procedure\ map\ of\ the\ parent\ environment.\ It\ does\ this\ by\n\ checking\ if\ the\ environment\ has\ a\ parent.\ If\ it\ does,\ then\ it\ calls\ upon\n\ its\ procedure\ map\ and\ adds\ a\ new\ entry\ to\ that\ map.\ Otherwise,\ this\ means\ \n\ that\ the\ environment\ is\ the\ parent\ environment\ so\ it\ adds\ the\ object\n\ to\ the\ current\ environment's\ procedure\ map.\n\ \n\ @param\ name\ the\ name\ of\ the\ procedure\n\ @param\ dec\ \ the\ declaration\ object\ of\ the\ procedure\n
comment8.params=name
comment8.target=ast.ProcedureDeclaration\ getProcedure(java.lang.String)
comment8.text=\n\ The\ getProcedure()\ method\ returns\ the\ procedure\ declaration\ from\ the\ \n\ parent\ environment's\ procedure\ map.\ It\ does\ this\ by\ checking\ if\ the\ \n\ environment\ has\ a\ parent.\ If\ it\ does,\ then\ it\ calls\ upon\ its\ procedure\ \n\ map\ and\ gets\ that\ entry\ from\ its\ map.\ Otherwise,\ this\ means\ that\ the\ \n\ environment\ is\ the\ parent\ environment\ so\ it\ gets\ the\ entry\ from\ its\ own\n\ procedure\ map.\n\ \n\ @param\ name\ the\ name\ of\ the\ procedure\n\ @return\ the\ ProcedureDeclaration\ object\ assosciated\ with\ the\ given\ procedure\n
comment9.params=
comment9.target=Environment\ getParent()
comment9.text=\n\ The\ getParent()\ method\ returns\ the\ parent\ environment\ for\ the\ \n\ environment.\ \n\ \n\ @return\ the\ parent\ environment\n
numComments=10
